网络基础知识：
这几天复习了一下网络方面的知识，发现之前对网络这块的了解真的是连皮毛都不算。下面是一些对网络这块新的认识：
1、TCP/IP四层模型：应用层、传输层、网络层、数据链路层；
2、经常用到的Socket抽象层在传输层，TCP/IP协议栈在网络层；
3、Socket是对各种网络协议进行了抽象后封装的一个网络编程接口；
4、TCP/IP的read和write都有一个读缓冲区和写缓冲区，一般为8k，socket在执行write后，就交给tip/ip处理了，真正发送出去的时机由tcp/ip控制，socket关闭后，读缓冲区的数据会丢失，写缓冲区的数据不会丢失，是否会继续发出去由tcp/ip根据网络状态决定；
5、服务端的内核，会维护一个SYNC队列（保存正在同步还未完成三次握手的连接）和一个Accept队列（完成三次握手已经建立的队列）；
6、socket执行listen监听函数后，客户端就可以进行connect连接了，并不需要等待服务端调用accept函数，服务端调用accept函数是把已经建立的连接从Accept队列取出；
7、一个服务端端口可以接受的连接数逻辑上不受限制的（网上很多说可以接受65535个是错误的说法），虽然accept后是创建了一个新的socket，但是这个socket只是相对于tcp/ip层的一个标识，并不是真正在端口上重新创建了一个连接，所以这个socket并不影响这个端口。可以接受的连接由于受到资源的限制比如一个静止状态的TCP连接需要消耗的内存一般是3.3k（不同系统占用内存可能不同），所以数量还是有限的；
8、客户端可以发起的TCP连接受端口限制，默认情况下动态端口的分配范围为 1024-5000，也就是说默认情况下，客户端最多可以同时发起3977 个Socket 连接；linux下还受限于可打开的文件数量，在linux 上默认是1024（可以通过内核参数修改）。